{"version":3,"file":"src_app_modules_account_account_module_ts.js","mappings":"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","sources":["./src/app/modules/account/account-routing.module.ts","./src/app/modules/account/account.module.ts","./src/app/modules/account/login/login.component.ts","./src/app/modules/account/login/login.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: LoginComponent\n  },\n  {\n    path: 'login', component: LoginComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AccountRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AccountRoutingModule } from './account-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { MaterialModule } from 'src/app/shared/material/material.module';\nimport { CoreModule } from 'src/app/core/core.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    LoginComponent\n  ],\n  imports: [\n    CommonModule,\n    AccountRoutingModule,\n    MaterialModule,\n    SharedModule\n  ]\n})\nexport class AccountModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { AccountService } from 'src/app/core/services/account.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: UntypedFormGroup;\n  returnUrl: string;\n  isBeingLoggedIn: boolean = false;\n  constructor(private accountService: AccountService, private router: Router, private activatedRoute: ActivatedRoute) {\n    this.initializeForm();\n  }\n\n  ngOnInit(): void {\n    this.returnUrl = this.activatedRoute.snapshot.queryParams.returnUrl || '/home';\n  }\n\n  initializeForm() {\n    this.loginForm = new UntypedFormGroup({\n      userName: new UntypedFormControl('', Validators.required),\n      password: new UntypedFormControl('', Validators.required)\n    });\n  }\n\n  onSubmit() {\n    this.isBeingLoggedIn = true;\n    this.loginForm.disable()\n    this.accountService.login(this.loginForm.value)\n      .pipe(filter(result => result !== null))\n      .subscribe(() => this.router.navigateByUrl(this.returnUrl),\n        error => { console.log(error); this.loginForm.enable();  }).add(()=>this.isBeingLoggedIn = false);\n  }\n\n  fillSuperAdminCredentials() {\n    this.loginForm = new UntypedFormGroup({\n      userName: new UntypedFormControl('superadmin', Validators.required),\n      password: new UntypedFormControl('Pa$$w0rd', Validators.required)\n    });\n  }\n\n  fillStaffCredentials() {\n    this.loginForm = new UntypedFormGroup({\n      userName: new UntypedFormControl('staff', Validators.required),\n      password: new UntypedFormControl('Pa$$w0rd', Validators.required)\n    });\n  }\n}\n","<div class=\"content\">\n  <div class=\"container\">\n    <mat-card class=\"mat-card-login\">\n      <mat-card-content class=\"mat-card-content-login\">\n        <div class=\"row\">\n          <div class=\"col-lg-6 col-md-6 col-xl-6 col-xs-6 d-none d-lg-block login-image\">\n          </div>\n          <div class=\"col-lg-6 col-md-12 col-xl-6 col-xs-6 login-form\">\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n              <h1>Sign in</h1>\n              <h3>Enter your credentials here.</h3>\n              <mat-form-field appearance=\"fill\">\n                <input matInput placeholder=\"User Name\" formControlName=\"userName\" required>\n                <mat-error>\n                  Please provide a valid username\n                </mat-error>\n              </mat-form-field>\n              <mat-form-field appearance=\"fill\">\n                <input matInput type=\"password\" placeholder=\"Password\" formControlName=\"password\" required>\n                <mat-error>\n                  Please provide a valid password\n                </mat-error>\n              </mat-form-field>\n              <button *ngIf=\"!isBeingLoggedIn\" mat-raised-button color=\"primary\" style=\"width:100%;height: 50px;\"\n                [disabled]=\"!loginForm.valid\" type=\"submit\"> Sign In\n              </button>\n              <button *ngIf=\"isBeingLoggedIn\" mat-raised-button color=\"primary\" style=\"width:100%;height: 50px;\"\n                [disabled]=\"!loginForm.valid\" type=\"submit\">\n                <mat-icon>\n                  <mat-spinner diameter=\"20\">\n                  </mat-spinner>\n                </mat-icon> Logging you in..\n              </button>\n            </form>\n            <div class=\"row\">\n              <div class=\"col\"><button mat-raised-button color=\"accent\" style=\"width:100%;height: 50px\"\n                  (click)=\"fillSuperAdminCredentials()\">superadmin\n                  credentials</button></div>\n              <div class=\"col\"> <button mat-raised-button color=\"accent\" style=\"width:100%;height: 50px\"\n                  (click)=\"fillStaffCredentials()\">staff\n                  credentials</button></div>\n            </div>\n          </div>\n        </div>\n      </mat-card-content>\n    </mat-card>\n\n  </div>\n</div>\n"],"names":[],"sourceRoot":"webpack:///"}